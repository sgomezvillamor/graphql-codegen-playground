# Generated by ariadne-codegen
# Source: ./tableau-queries.graphql

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import FieldDataType, FieldRole, FieldRoleCategory


class GetItemsSheetsConnection(BaseModel):
    sheets_connection: "GetItemsSheetsConnectionSheetsConnection" = Field(
        alias="sheetsConnection"
    )


class GetItemsSheetsConnectionSheetsConnection(BaseModel):
    nodes: List["GetItemsSheetsConnectionSheetsConnectionNodes"]
    page_info: "GetItemsSheetsConnectionSheetsConnectionPageInfo" = Field(
        alias="pageInfo"
    )


class GetItemsSheetsConnectionSheetsConnectionNodes(BaseModel):
    id: str
    name: Optional[str]
    path: Optional[str]
    luid: str
    created_at: Any = Field(alias="createdAt")
    updated_at: Any = Field(alias="updatedAt")
    tags: List["GetItemsSheetsConnectionSheetsConnectionNodesTags"]
    contained_in_dashboards: Optional[
        List[
            Optional[
                "GetItemsSheetsConnectionSheetsConnectionNodesContainedInDashboards"
            ]
        ]
    ] = Field(alias="containedInDashboards")
    workbook: Optional["GetItemsSheetsConnectionSheetsConnectionNodesWorkbook"]
    datasource_fields: Optional[
        List[
            Optional[
                Annotated[
                    Union[
                        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsField",
                        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsCalculatedField",
                        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsColumnField",
                        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceField",
                        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsGroupField",
                    ],
                    Field(discriminator="typename__"),
                ]
            ]
        ]
    ] = Field(alias="datasourceFields")


class GetItemsSheetsConnectionSheetsConnectionNodesTags(BaseModel):
    name: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesContainedInDashboards(BaseModel):
    name: Optional[str]
    path: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesWorkbook(BaseModel):
    id: str
    name: Optional[str]
    project_name: Optional[str] = Field(alias="projectName")
    luid: str
    owner: "GetItemsSheetsConnectionSheetsConnectionNodesWorkbookOwner"


class GetItemsSheetsConnectionSheetsConnectionNodesWorkbookOwner(BaseModel):
    username: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsField(BaseModel):
    typename__: Literal[
        "BinField",
        "CombinedField",
        "CombinedSetField",
        "Field",
        "HierarchyField",
        "SetField",
    ] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    datasource: Optional[
        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsFieldDatasource"
    ]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsFieldDatasource(
    BaseModel
):
    typename__: Literal["Datasource", "EmbeddedDatasource", "PublishedDatasource"] = (
        Field(alias="__typename")
    )
    id: str
    name: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsCalculatedField(
    BaseModel
):
    typename__: Literal["CalculatedField"] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    datasource: Optional[
        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsCalculatedFieldDatasource"
    ]
    role: Optional[FieldRole]
    data_type: Optional[FieldDataType] = Field(alias="dataType")
    aggregation: Optional[str]
    formula: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsCalculatedFieldDatasource(
    BaseModel
):
    typename__: Literal["Datasource", "EmbeddedDatasource", "PublishedDatasource"] = (
        Field(alias="__typename")
    )
    id: str
    name: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsColumnField(
    BaseModel
):
    typename__: Literal["ColumnField"] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    datasource: Optional[
        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsColumnFieldDatasource"
    ]
    data_category: Optional[FieldRoleCategory] = Field(alias="dataCategory")
    role: Optional[FieldRole]
    data_type: Optional[FieldDataType] = Field(alias="dataType")
    aggregation: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsColumnFieldDatasource(
    BaseModel
):
    typename__: Literal["Datasource", "EmbeddedDatasource", "PublishedDatasource"] = (
        Field(alias="__typename")
    )
    id: str
    name: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceField(
    BaseModel
):
    typename__: Literal["DatasourceField"] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    datasource: Optional[
        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldDatasource"
    ]
    remote_field: Optional[
        Annotated[
            Union[
                "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldField",
                "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldCalculatedField",
                "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldColumnField",
                "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldGroupField",
            ],
            Field(discriminator="typename__"),
        ]
    ] = Field(alias="remoteField")


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldDatasource(
    BaseModel
):
    typename__: Literal["Datasource", "EmbeddedDatasource", "PublishedDatasource"] = (
        Field(alias="__typename")
    )
    id: str
    name: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldField(
    BaseModel
):
    typename__: Literal[
        "BinField",
        "CombinedField",
        "CombinedSetField",
        "DatasourceField",
        "Field",
        "HierarchyField",
        "SetField",
    ] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    folder_name: Optional[str] = Field(alias="folderName")


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldCalculatedField(
    BaseModel
):
    typename__: Literal["CalculatedField"] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    folder_name: Optional[str] = Field(alias="folderName")
    role: Optional[FieldRole]
    data_type: Optional[FieldDataType] = Field(alias="dataType")
    aggregation: Optional[str]
    formula: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldColumnField(
    BaseModel
):
    typename__: Literal["ColumnField"] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    folder_name: Optional[str] = Field(alias="folderName")
    data_category: Optional[FieldRoleCategory] = Field(alias="dataCategory")
    role: Optional[FieldRole]
    data_type: Optional[FieldDataType] = Field(alias="dataType")
    aggregation: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceFieldRemoteFieldGroupField(
    BaseModel
):
    typename__: Literal["GroupField"] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    folder_name: Optional[str] = Field(alias="folderName")
    role: Optional[FieldRole]
    data_type: Optional[FieldDataType] = Field(alias="dataType")


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsGroupField(
    BaseModel
):
    typename__: Literal["GroupField"] = Field(alias="__typename")
    id: str
    name: Optional[str]
    description: Optional[str]
    datasource: Optional[
        "GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsGroupFieldDatasource"
    ]
    role: Optional[FieldRole]
    data_type: Optional[FieldDataType] = Field(alias="dataType")


class GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsGroupFieldDatasource(
    BaseModel
):
    typename__: Literal["Datasource", "EmbeddedDatasource", "PublishedDatasource"] = (
        Field(alias="__typename")
    )
    id: str
    name: Optional[str]


class GetItemsSheetsConnectionSheetsConnectionPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")


GetItemsSheetsConnection.model_rebuild()
GetItemsSheetsConnectionSheetsConnection.model_rebuild()
GetItemsSheetsConnectionSheetsConnectionNodes.model_rebuild()
GetItemsSheetsConnectionSheetsConnectionNodesWorkbook.model_rebuild()
GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsField.model_rebuild()
GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsCalculatedField.model_rebuild()
GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsColumnField.model_rebuild()
GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsDatasourceField.model_rebuild()
GetItemsSheetsConnectionSheetsConnectionNodesDatasourceFieldsGroupField.model_rebuild()
